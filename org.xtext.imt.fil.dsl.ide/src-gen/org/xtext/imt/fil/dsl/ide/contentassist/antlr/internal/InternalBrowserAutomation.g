/*
 * generated by Xtext 2.19.0
 */
grammar InternalBrowserAutomation;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.imt.fil.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.imt.fil.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.imt.fil.dsl.services.BrowserAutomationGrammarAccess;

}
@parser::members {
	private BrowserAutomationGrammarAccess grammarAccess;

	public void setGrammarAccess(BrowserAutomationGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleBrowserAutomation
entryRuleBrowserAutomation
:
{ before(grammarAccess.getBrowserAutomationRule()); }
	 ruleBrowserAutomation
{ after(grammarAccess.getBrowserAutomationRule()); } 
	 EOF 
;

// Rule BrowserAutomation
ruleBrowserAutomation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBrowserAutomationAccess().getGroup()); }
		(rule__BrowserAutomation__Group__0)
		{ after(grammarAccess.getBrowserAutomationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWebBrowser
entryRuleWebBrowser
:
{ before(grammarAccess.getWebBrowserRule()); }
	 ruleWebBrowser
{ after(grammarAccess.getWebBrowserRule()); } 
	 EOF 
;

// Rule WebBrowser
ruleWebBrowser 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWebBrowserAccess().getAlternatives()); }
		(rule__WebBrowser__Alternatives)
		{ after(grammarAccess.getWebBrowserAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoAction
entryRuleDoAction
:
{ before(grammarAccess.getDoActionRule()); }
	 ruleDoAction
{ after(grammarAccess.getDoActionRule()); } 
	 EOF 
;

// Rule DoAction
ruleDoAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoActionAccess().getGroup()); }
		(rule__DoAction__Group__0)
		{ after(grammarAccess.getDoActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAction
entryRuleAction
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getActionAccess().getAlternatives()); }
		(rule__Action__Alternatives)
		{ after(grammarAccess.getActionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGoTo
entryRuleGoTo
:
{ before(grammarAccess.getGoToRule()); }
	 ruleGoTo
{ after(grammarAccess.getGoToRule()); } 
	 EOF 
;

// Rule GoTo
ruleGoTo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoToAccess().getGroup()); }
		(rule__GoTo__Group__0)
		{ after(grammarAccess.getGoToAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUncheckAll
entryRuleUncheckAll
:
{ before(grammarAccess.getUncheckAllRule()); }
	 ruleUncheckAll
{ after(grammarAccess.getUncheckAllRule()); } 
	 EOF 
;

// Rule UncheckAll
ruleUncheckAll 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUncheckAllAccess().getGroup()); }
		(rule__UncheckAll__Group__0)
		{ after(grammarAccess.getUncheckAllAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGet
entryRuleGet
:
{ before(grammarAccess.getGetRule()); }
	 ruleGet
{ after(grammarAccess.getGetRule()); } 
	 EOF 
;

// Rule Get
ruleGet 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGetAccess().getGroup()); }
		(rule__Get__Group__0)
		{ after(grammarAccess.getGetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttributeValue
entryRuleAttributeValue
:
{ before(grammarAccess.getAttributeValueRule()); }
	 ruleAttributeValue
{ after(grammarAccess.getAttributeValueRule()); } 
	 EOF 
;

// Rule AttributeValue
ruleAttributeValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributeValueAccess().getAlternatives()); }
		(rule__AttributeValue__Alternatives)
		{ after(grammarAccess.getAttributeValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOrder
entryRuleOrder
:
{ before(grammarAccess.getOrderRule()); }
	 ruleOrder
{ after(grammarAccess.getOrderRule()); } 
	 EOF 
;

// Rule Order
ruleOrder 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOrderAccess().getGroup()); }
		(rule__Order__Group__0)
		{ after(grammarAccess.getOrderAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getAlternatives()); }
		(rule__Element__Alternatives)
		{ after(grammarAccess.getElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAttribut
entryRuleAttribut
:
{ before(grammarAccess.getAttributRule()); }
	 ruleAttribut
{ after(grammarAccess.getAttributRule()); } 
	 EOF 
;

// Rule Attribut
ruleAttribut 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAttributAccess().getAlternatives()); }
		(rule__Attribut__Alternatives)
		{ after(grammarAccess.getAttributAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
		(rule__Variable__NameAssignment)
		{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVarReference
entryRuleVarReference
:
{ before(grammarAccess.getVarReferenceRule()); }
	 ruleVarReference
{ after(grammarAccess.getVarReferenceRule()); } 
	 EOF 
;

// Rule VarReference
ruleVarReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVarReferenceAccess().getVarRefAssignment()); }
		(rule__VarReference__VarRefAssignment)
		{ after(grammarAccess.getVarReferenceAccess().getVarRefAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClick
entryRuleClick
:
{ before(grammarAccess.getClickRule()); }
	 ruleClick
{ after(grammarAccess.getClickRule()); } 
	 EOF 
;

// Rule Click
ruleClick 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClickAccess().getGroup()); }
		(rule__Click__Group__0)
		{ after(grammarAccess.getClickAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsert
entryRuleInsert
:
{ before(grammarAccess.getInsertRule()); }
	 ruleInsert
{ after(grammarAccess.getInsertRule()); } 
	 EOF 
;

// Rule Insert
ruleInsert 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertAccess().getGroup()); }
		(rule__Insert__Group__0)
		{ after(grammarAccess.getInsertAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerify
entryRuleVerify
:
{ before(grammarAccess.getVerifyRule()); }
	 ruleVerify
{ after(grammarAccess.getVerifyRule()); } 
	 EOF 
;

// Rule Verify
ruleVerify 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerifyAccess().getGroup()); }
		(rule__Verify__Group__0)
		{ after(grammarAccess.getVerifyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheck
entryRuleCheck
:
{ before(grammarAccess.getCheckRule()); }
	 ruleCheck
{ after(grammarAccess.getCheckRule()); } 
	 EOF 
;

// Rule Check
ruleCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckAccess().getGroup()); }
		(rule__Check__Group__0)
		{ after(grammarAccess.getCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChoose
entryRuleChoose
:
{ before(grammarAccess.getChooseRule()); }
	 ruleChoose
{ after(grammarAccess.getChooseRule()); } 
	 EOF 
;

// Rule Choose
ruleChoose 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChooseAccess().getGroup()); }
		(rule__Choose__Group__0)
		{ after(grammarAccess.getChooseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleContains
entryRuleContains
:
{ before(grammarAccess.getContainsRule()); }
	 ruleContains
{ after(grammarAccess.getContainsRule()); } 
	 EOF 
;

// Rule Contains
ruleContains 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getContainsAccess().getGroup()); }
		(rule__Contains__Group__0)
		{ after(grammarAccess.getContainsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WebBrowser__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWebBrowserAccess().getFirefoxKeyword_0()); }
		'firefox'
		{ after(grammarAccess.getWebBrowserAccess().getFirefoxKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getWebBrowserAccess().getChromeKeyword_1()); }
		'chrome'
		{ after(grammarAccess.getWebBrowserAccess().getChromeKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getWebBrowserAccess().getSafariKeyword_2()); }
		'safari'
		{ after(grammarAccess.getWebBrowserAccess().getSafariKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getWebBrowserAccess().getInternetExplorerKeyword_3()); }
		'internetExplorer'
		{ after(grammarAccess.getWebBrowserAccess().getInternetExplorerKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getDoActionParserRuleCall_0()); }
		ruleDoAction
		{ after(grammarAccess.getStatementAccess().getDoActionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGetParserRuleCall_1()); }
		ruleGet
		{ after(grammarAccess.getStatementAccess().getGetParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getUncheckAllParserRuleCall_2()); }
		ruleUncheckAll
		{ after(grammarAccess.getStatementAccess().getUncheckAllParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getGoToParserRuleCall_3()); }
		ruleGoTo
		{ after(grammarAccess.getStatementAccess().getGoToParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getActionAccess().getClickParserRuleCall_0()); }
		ruleClick
		{ after(grammarAccess.getActionAccess().getClickParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getInsertParserRuleCall_1()); }
		ruleInsert
		{ after(grammarAccess.getActionAccess().getInsertParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getVerifyParserRuleCall_2()); }
		ruleVerify
		{ after(grammarAccess.getActionAccess().getVerifyParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getCheckParserRuleCall_3()); }
		ruleCheck
		{ after(grammarAccess.getActionAccess().getCheckParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getChooseParserRuleCall_4()); }
		ruleChoose
		{ after(grammarAccess.getActionAccess().getChooseParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getActionAccess().getContainsParserRuleCall_5()); }
		ruleContains
		{ after(grammarAccess.getActionAccess().getContainsParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getGroup_3_0()); }
		(rule__Get__Group_3_0__0)
		{ after(grammarAccess.getGetAccess().getGroup_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getGetAccess().getPageTitleAssignment_3_1()); }
		(rule__Get__PageTitleAssignment_3_1)
		{ after(grammarAccess.getGetAccess().getPageTitleAssignment_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Alternatives_3_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getGroup_3_0_2_0()); }
		(rule__Get__Group_3_0_2_0__0)
		{ after(grammarAccess.getGetAccess().getGroup_3_0_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getGetAccess().getGroup_3_0_2_1()); }
		(rule__Get__Group_3_0_2_1__0)
		{ after(grammarAccess.getGetAccess().getGroup_3_0_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeValueAccess().getStringValAssignment_0()); }
		(rule__AttributeValue__StringValAssignment_0)
		{ after(grammarAccess.getAttributeValueAccess().getStringValAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributeValueAccess().getVarRefValAssignment_1()); }
		(rule__AttributeValue__VarRefValAssignment_1)
		{ after(grammarAccess.getAttributeValueAccess().getVarRefValAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getLinkKeyword_0()); }
		'link'
		{ after(grammarAccess.getElementAccess().getLinkKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getInputKeyword_1()); }
		'input'
		{ after(grammarAccess.getElementAccess().getInputKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getButtonKeyword_2()); }
		'button'
		{ after(grammarAccess.getElementAccess().getButtonKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getCheckboxKeyword_3()); }
		'checkbox'
		{ after(grammarAccess.getElementAccess().getCheckboxKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getComboboxKeyword_4()); }
		'combobox'
		{ after(grammarAccess.getElementAccess().getComboboxKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getImageKeyword_5()); }
		'image'
		{ after(grammarAccess.getElementAccess().getImageKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getTextKeyword_6()); }
		'text'
		{ after(grammarAccess.getElementAccess().getTextKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getTitleKeyword_7()); }
		'title'
		{ after(grammarAccess.getElementAccess().getTitleKeyword_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribut__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributAccess().getClassKeyword_0()); }
		'class'
		{ after(grammarAccess.getAttributAccess().getClassKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getAttributAccess().getValueKeyword_1()); }
		'value'
		{ after(grammarAccess.getAttributAccess().getValueKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getAttributAccess().getAltKeyword_2()); }
		'alt'
		{ after(grammarAccess.getAttributAccess().getAltKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getAttributAccess().getNameKeyword_3()); }
		'name'
		{ after(grammarAccess.getAttributAccess().getNameKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getAttributAccess().getHrefKeyword_4()); }
		'href'
		{ after(grammarAccess.getAttributAccess().getHrefKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getAttrValAssignment_1_0()); }
		(rule__Insert__AttrValAssignment_1_0)
		{ after(grammarAccess.getInsertAccess().getAttrValAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getInsertAccess().getVarToInsertAssignment_1_1()); }
		(rule__Insert__VarToInsertAssignment_1_1)
		{ after(grammarAccess.getInsertAccess().getVarToInsertAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BrowserAutomation__Group__0__Impl
	rule__BrowserAutomation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowserAutomationAccess().getBrowserAutomationAction_0()); }
	()
	{ after(grammarAccess.getBrowserAutomationAccess().getBrowserAutomationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BrowserAutomation__Group__1__Impl
	rule__BrowserAutomation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowserAutomationAccess().getTestNameAssignment_1()); }
	(rule__BrowserAutomation__TestNameAssignment_1)
	{ after(grammarAccess.getBrowserAutomationAccess().getTestNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BrowserAutomation__Group__2__Impl
	rule__BrowserAutomation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowserAutomationAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getBrowserAutomationAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BrowserAutomation__Group__3__Impl
	rule__BrowserAutomation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowserAutomationAccess().getOpenKeyword_3()); }
	'open'
	{ after(grammarAccess.getBrowserAutomationAccess().getOpenKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BrowserAutomation__Group__4__Impl
	rule__BrowserAutomation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowserAutomationAccess().getWebBrowserAssignment_4()); }
	(rule__BrowserAutomation__WebBrowserAssignment_4)
	{ after(grammarAccess.getBrowserAutomationAccess().getWebBrowserAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BrowserAutomation__Group__5__Impl
	rule__BrowserAutomation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowserAutomationAccess().getStatementsAssignment_5()); }
	(rule__BrowserAutomation__StatementsAssignment_5)*
	{ after(grammarAccess.getBrowserAutomationAccess().getStatementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BrowserAutomation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBrowserAutomationAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getBrowserAutomationAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoAction__Group__0__Impl
	rule__DoAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoActionAccess().getGetAssignment_0()); }
	(rule__DoAction__GetAssignment_0)
	{ after(grammarAccess.getDoActionAccess().getGetAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoAction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoActionAccess().getActionAssignment_1()); }
	(rule__DoAction__ActionAssignment_1)
	{ after(grammarAccess.getDoActionAccess().getActionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GoTo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__0__Impl
	rule__GoTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getGoKeyword_0()); }
	'go'
	{ after(grammarAccess.getGoToAccess().getGoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__1__Impl
	rule__GoTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getToKeyword_1()); }
	'to'
	{ after(grammarAccess.getGoToAccess().getToKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GoTo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoToAccess().getUrlAssignment_2()); }
	(rule__GoTo__UrlAssignment_2)
	{ after(grammarAccess.getGoToAccess().getUrlAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__UncheckAll__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UncheckAll__Group__0__Impl
	rule__UncheckAll__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UncheckAll__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUncheckAllAccess().getUncheckKeyword_0()); }
	'uncheck'
	{ after(grammarAccess.getUncheckAllAccess().getUncheckKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__UncheckAll__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__UncheckAll__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UncheckAll__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUncheckAllAccess().getAllKeyword_1()); }
	'all'
	{ after(grammarAccess.getUncheckAllAccess().getAllKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Get__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group__0__Impl
	rule__Get__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getVarRefAssignment_0()); }
	(rule__Get__VarRefAssignment_0)
	{ after(grammarAccess.getGetAccess().getVarRefAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group__1__Impl
	rule__Get__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getGetAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group__2__Impl
	rule__Get__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getGetKeyword_2()); }
	'get'
	{ after(grammarAccess.getGetAccess().getGetKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getAlternatives_3()); }
	(rule__Get__Alternatives_3)
	{ after(grammarAccess.getGetAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Get__Group_3_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0__0__Impl
	rule__Get__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getElementAssignment_3_0_0()); }
	(rule__Get__ElementAssignment_3_0_0)
	{ after(grammarAccess.getGetAccess().getElementAssignment_3_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0__1__Impl
	rule__Get__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getOrderAssignment_3_0_1()); }
	(rule__Get__OrderAssignment_3_0_1)?
	{ after(grammarAccess.getGetAccess().getOrderAssignment_3_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getAlternatives_3_0_2()); }
	(rule__Get__Alternatives_3_0_2)
	{ after(grammarAccess.getGetAccess().getAlternatives_3_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Get__Group_3_0_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0_2_0__0__Impl
	rule__Get__Group_3_0_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getByKeyword_3_0_2_0_0()); }
	'by'
	{ after(grammarAccess.getGetAccess().getByKeyword_3_0_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0_2_0__1__Impl
	rule__Get__Group_3_0_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getAttrAssignment_3_0_2_0_1()); }
	(rule__Get__AttrAssignment_3_0_2_0_1)
	{ after(grammarAccess.getGetAccess().getAttrAssignment_3_0_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0_2_0__2__Impl
	rule__Get__Group_3_0_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getLeftSquareBracketKeyword_3_0_2_0_2()); }
	'['
	{ after(grammarAccess.getGetAccess().getLeftSquareBracketKeyword_3_0_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0_2_0__3__Impl
	rule__Get__Group_3_0_2_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getAttrValAssignment_3_0_2_0_3()); }
	(rule__Get__AttrValAssignment_3_0_2_0_3)
	{ after(grammarAccess.getGetAccess().getAttrValAssignment_3_0_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0_2_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_0__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getRightSquareBracketKeyword_3_0_2_0_4()); }
	']'
	{ after(grammarAccess.getGetAccess().getRightSquareBracketKeyword_3_0_2_0_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Get__Group_3_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0_2_1__0__Impl
	rule__Get__Group_3_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getFromKeyword_3_0_2_1_0()); }
	'from'
	{ after(grammarAccess.getGetAccess().getFromKeyword_3_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Get__Group_3_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__Group_3_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGetAccess().getFromAssignment_3_0_2_1_1()); }
	(rule__Get__FromAssignment_3_0_2_1_1)
	{ after(grammarAccess.getGetAccess().getFromAssignment_3_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Order__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group__0__Impl
	rule__Order__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getNumberKeyword_0()); }
	'number'
	{ after(grammarAccess.getOrderAccess().getNumberKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Order__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOrderAccess().getOrderAssignment_1()); }
	(rule__Order__OrderAssignment_1)
	{ after(grammarAccess.getOrderAccess().getOrderAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Click__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__0__Impl
	rule__Click__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getClickKeyword_0()); }
	'click'
	{ after(grammarAccess.getClickAccess().getClickKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__1__Impl
	rule__Click__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getOnKeyword_1()); }
	'on'
	{ after(grammarAccess.getClickAccess().getOnKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getVarClickAssignment_2()); }
	(rule__Click__VarClickAssignment_2)
	{ after(grammarAccess.getClickAccess().getVarClickAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insert__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__0__Impl
	rule__Insert__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
	'insert'
	{ after(grammarAccess.getInsertAccess().getInsertKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__1__Impl
	rule__Insert__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getAlternatives_1()); }
	(rule__Insert__Alternatives_1)
	{ after(grammarAccess.getInsertAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__2__Impl
	rule__Insert__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getInsertAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insert__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertAccess().getVarInsertedAssignment_3()); }
	(rule__Insert__VarInsertedAssignment_3)
	{ after(grammarAccess.getInsertAccess().getVarInsertedAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__0__Impl
	rule__Verify__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getVarToVerifyAssignment_0()); }
	(rule__Verify__VarToVerifyAssignment_0)
	{ after(grammarAccess.getVerifyAccess().getVarToVerifyAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__1__Impl
	rule__Verify__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getVerifyAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__2__Impl
	rule__Verify__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getNotKeyword_2()); }
	'not'
	{ after(grammarAccess.getVerifyAccess().getNotKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getNullKeyword_3()); }
	'null'
	{ after(grammarAccess.getVerifyAccess().getNullKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__0__Impl
	rule__Check__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
	'check'
	{ after(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getVarCheckAssignment_1()); }
	(rule__Check__VarCheckAssignment_1)
	{ after(grammarAccess.getCheckAccess().getVarCheckAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Choose__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choose__Group__0__Impl
	rule__Choose__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseAccess().getChooseKeyword_0()); }
	'choose'
	{ after(grammarAccess.getChooseAccess().getChooseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choose__Group__1__Impl
	rule__Choose__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseAccess().getValueAssignment_1()); }
	(rule__Choose__ValueAssignment_1)
	{ after(grammarAccess.getChooseAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choose__Group__2__Impl
	rule__Choose__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getChooseAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Choose__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChooseAccess().getVarChooseAssignment_3()); }
	(rule__Choose__VarChooseAssignment_3)
	{ after(grammarAccess.getChooseAccess().getVarChooseAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Contains__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__0__Impl
	rule__Contains__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getVarContainsAssignment_0()); }
	(rule__Contains__VarContainsAssignment_0)
	{ after(grammarAccess.getContainsAccess().getVarContainsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__1__Impl
	rule__Contains__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getContainsKeyword_1()); }
	'contains'
	{ after(grammarAccess.getContainsAccess().getContainsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Contains__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getContainsAccess().getVarContainedAssignment_2()); }
	(rule__Contains__VarContainedAssignment_2)
	{ after(grammarAccess.getContainsAccess().getVarContainedAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BrowserAutomation__TestNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBrowserAutomationAccess().getTestNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getBrowserAutomationAccess().getTestNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__WebBrowserAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBrowserAutomationAccess().getWebBrowserWebBrowserParserRuleCall_4_0()); }
		ruleWebBrowser
		{ after(grammarAccess.getBrowserAutomationAccess().getWebBrowserWebBrowserParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BrowserAutomation__StatementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBrowserAutomationAccess().getStatementsStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getBrowserAutomationAccess().getStatementsStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoAction__GetAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoActionAccess().getGetGetParserRuleCall_0_0()); }
		ruleGet
		{ after(grammarAccess.getDoActionAccess().getGetGetParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoAction__ActionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoActionAccess().getActionActionParserRuleCall_1_0()); }
		ruleAction
		{ after(grammarAccess.getDoActionAccess().getActionActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GoTo__UrlAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoToAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getGoToAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__VarRefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getVarRefVariableParserRuleCall_0_0()); }
		ruleVariable
		{ after(grammarAccess.getGetAccess().getVarRefVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__ElementAssignment_3_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getElementElementParserRuleCall_3_0_0_0()); }
		ruleElement
		{ after(grammarAccess.getGetAccess().getElementElementParserRuleCall_3_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__OrderAssignment_3_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getOrderOrderParserRuleCall_3_0_1_0()); }
		ruleOrder
		{ after(grammarAccess.getGetAccess().getOrderOrderParserRuleCall_3_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__AttrAssignment_3_0_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getAttrAttributParserRuleCall_3_0_2_0_1_0()); }
		ruleAttribut
		{ after(grammarAccess.getGetAccess().getAttrAttributParserRuleCall_3_0_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__AttrValAssignment_3_0_2_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getAttrValAttributeValueParserRuleCall_3_0_2_0_3_0()); }
		ruleAttributeValue
		{ after(grammarAccess.getGetAccess().getAttrValAttributeValueParserRuleCall_3_0_2_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__FromAssignment_3_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getFromVarReferenceParserRuleCall_3_0_2_1_1_0()); }
		ruleVarReference
		{ after(grammarAccess.getGetAccess().getFromVarReferenceParserRuleCall_3_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Get__PageTitleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGetAccess().getPageTitlePageTitleKeyword_3_1_0()); }
		(
			{ before(grammarAccess.getGetAccess().getPageTitlePageTitleKeyword_3_1_0()); }
			'pageTitle'
			{ after(grammarAccess.getGetAccess().getPageTitlePageTitleKeyword_3_1_0()); }
		)
		{ after(grammarAccess.getGetAccess().getPageTitlePageTitleKeyword_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__StringValAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeValueAccess().getStringValSTRINGTerminalRuleCall_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getAttributeValueAccess().getStringValSTRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__AttributeValue__VarRefValAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAttributeValueAccess().getVarRefValVarReferenceParserRuleCall_1_0()); }
		ruleVarReference
		{ after(grammarAccess.getAttributeValueAccess().getVarRefValVarReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Order__OrderAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOrderAccess().getOrderINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getOrderAccess().getOrderINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VarReference__VarRefAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVarReferenceAccess().getVarRefVariableCrossReference_0()); }
		(
			{ before(grammarAccess.getVarReferenceAccess().getVarRefVariableIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVarReferenceAccess().getVarRefVariableIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getVarReferenceAccess().getVarRefVariableCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__VarClickAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClickAccess().getVarClickVarReferenceParserRuleCall_2_0()); }
		ruleVarReference
		{ after(grammarAccess.getClickAccess().getVarClickVarReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__AttrValAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getAttrValSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getInsertAccess().getAttrValSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__VarToInsertAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getVarToInsertVarReferenceParserRuleCall_1_1_0()); }
		ruleVarReference
		{ after(grammarAccess.getInsertAccess().getVarToInsertVarReferenceParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insert__VarInsertedAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertAccess().getVarInsertedVarReferenceParserRuleCall_3_0()); }
		ruleVarReference
		{ after(grammarAccess.getInsertAccess().getVarInsertedVarReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__VarToVerifyAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getVarToVerifyVarReferenceParserRuleCall_0_0()); }
		ruleVarReference
		{ after(grammarAccess.getVerifyAccess().getVarToVerifyVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__VarCheckAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getVarCheckVarReferenceParserRuleCall_1_0()); }
		ruleVarReference
		{ after(grammarAccess.getCheckAccess().getVarCheckVarReferenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseAccess().getValueSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getChooseAccess().getValueSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Choose__VarChooseAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChooseAccess().getVarChooseVarReferenceParserRuleCall_3_0()); }
		ruleVarReference
		{ after(grammarAccess.getChooseAccess().getVarChooseVarReferenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__VarContainsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getVarContainsVarReferenceParserRuleCall_0_0()); }
		ruleVarReference
		{ after(grammarAccess.getContainsAccess().getVarContainsVarReferenceParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Contains__VarContainedAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getContainsAccess().getVarContainedVarReferenceParserRuleCall_2_0()); }
		ruleVarReference
		{ after(grammarAccess.getContainsAccess().getVarContainedVarReferenceParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
