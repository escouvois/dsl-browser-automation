/**
 * generated by Xtext 2.19.0
 */
package org.xtext.imt.fil.dsl.browserAutomation.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.imt.fil.dsl.browserAutomation.BrowserAutomationPackage;
import org.xtext.imt.fil.dsl.browserAutomation.Contains;
import org.xtext.imt.fil.dsl.browserAutomation.VarReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Contains</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.imt.fil.dsl.browserAutomation.impl.ContainsImpl#getVarContains <em>Var Contains</em>}</li>
 *   <li>{@link org.xtext.imt.fil.dsl.browserAutomation.impl.ContainsImpl#getVarContained <em>Var Contained</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ContainsImpl extends ActionImpl implements Contains
{
  /**
   * The cached value of the '{@link #getVarContains() <em>Var Contains</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarContains()
   * @generated
   * @ordered
   */
  protected VarReference varContains;

  /**
   * The cached value of the '{@link #getVarContained() <em>Var Contained</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarContained()
   * @generated
   * @ordered
   */
  protected VarReference varContained;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ContainsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BrowserAutomationPackage.Literals.CONTAINS;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarReference getVarContains()
  {
    return varContains;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVarContains(VarReference newVarContains, NotificationChain msgs)
  {
    VarReference oldVarContains = varContains;
    varContains = newVarContains;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.CONTAINS__VAR_CONTAINS, oldVarContains, newVarContains);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVarContains(VarReference newVarContains)
  {
    if (newVarContains != varContains)
    {
      NotificationChain msgs = null;
      if (varContains != null)
        msgs = ((InternalEObject)varContains).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BrowserAutomationPackage.CONTAINS__VAR_CONTAINS, null, msgs);
      if (newVarContains != null)
        msgs = ((InternalEObject)newVarContains).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BrowserAutomationPackage.CONTAINS__VAR_CONTAINS, null, msgs);
      msgs = basicSetVarContains(newVarContains, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.CONTAINS__VAR_CONTAINS, newVarContains, newVarContains));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarReference getVarContained()
  {
    return varContained;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVarContained(VarReference newVarContained, NotificationChain msgs)
  {
    VarReference oldVarContained = varContained;
    varContained = newVarContained;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.CONTAINS__VAR_CONTAINED, oldVarContained, newVarContained);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVarContained(VarReference newVarContained)
  {
    if (newVarContained != varContained)
    {
      NotificationChain msgs = null;
      if (varContained != null)
        msgs = ((InternalEObject)varContained).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BrowserAutomationPackage.CONTAINS__VAR_CONTAINED, null, msgs);
      if (newVarContained != null)
        msgs = ((InternalEObject)newVarContained).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BrowserAutomationPackage.CONTAINS__VAR_CONTAINED, null, msgs);
      msgs = basicSetVarContained(newVarContained, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.CONTAINS__VAR_CONTAINED, newVarContained, newVarContained));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINS:
        return basicSetVarContains(null, msgs);
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINED:
        return basicSetVarContained(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINS:
        return getVarContains();
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINED:
        return getVarContained();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINS:
        setVarContains((VarReference)newValue);
        return;
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINED:
        setVarContained((VarReference)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINS:
        setVarContains((VarReference)null);
        return;
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINED:
        setVarContained((VarReference)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINS:
        return varContains != null;
      case BrowserAutomationPackage.CONTAINS__VAR_CONTAINED:
        return varContained != null;
    }
    return super.eIsSet(featureID);
  }

} //ContainsImpl
