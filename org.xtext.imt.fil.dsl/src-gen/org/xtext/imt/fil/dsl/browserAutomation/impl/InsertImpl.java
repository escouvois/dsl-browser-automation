/**
 * generated by Xtext 2.19.0
 */
package org.xtext.imt.fil.dsl.browserAutomation.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.imt.fil.dsl.browserAutomation.BrowserAutomationPackage;
import org.xtext.imt.fil.dsl.browserAutomation.Insert;
import org.xtext.imt.fil.dsl.browserAutomation.VarReference;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Insert</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.imt.fil.dsl.browserAutomation.impl.InsertImpl#getAttrVal <em>Attr Val</em>}</li>
 *   <li>{@link org.xtext.imt.fil.dsl.browserAutomation.impl.InsertImpl#getVarToInsert <em>Var To Insert</em>}</li>
 *   <li>{@link org.xtext.imt.fil.dsl.browserAutomation.impl.InsertImpl#getVarInserted <em>Var Inserted</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InsertImpl extends ActionImpl implements Insert
{
  /**
   * The default value of the '{@link #getAttrVal() <em>Attr Val</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttrVal()
   * @generated
   * @ordered
   */
  protected static final String ATTR_VAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAttrVal() <em>Attr Val</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAttrVal()
   * @generated
   * @ordered
   */
  protected String attrVal = ATTR_VAL_EDEFAULT;

  /**
   * The cached value of the '{@link #getVarToInsert() <em>Var To Insert</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarToInsert()
   * @generated
   * @ordered
   */
  protected VarReference varToInsert;

  /**
   * The cached value of the '{@link #getVarInserted() <em>Var Inserted</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarInserted()
   * @generated
   * @ordered
   */
  protected VarReference varInserted;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InsertImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return BrowserAutomationPackage.Literals.INSERT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAttrVal()
  {
    return attrVal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAttrVal(String newAttrVal)
  {
    String oldAttrVal = attrVal;
    attrVal = newAttrVal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.INSERT__ATTR_VAL, oldAttrVal, attrVal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarReference getVarToInsert()
  {
    return varToInsert;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVarToInsert(VarReference newVarToInsert, NotificationChain msgs)
  {
    VarReference oldVarToInsert = varToInsert;
    varToInsert = newVarToInsert;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.INSERT__VAR_TO_INSERT, oldVarToInsert, newVarToInsert);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVarToInsert(VarReference newVarToInsert)
  {
    if (newVarToInsert != varToInsert)
    {
      NotificationChain msgs = null;
      if (varToInsert != null)
        msgs = ((InternalEObject)varToInsert).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BrowserAutomationPackage.INSERT__VAR_TO_INSERT, null, msgs);
      if (newVarToInsert != null)
        msgs = ((InternalEObject)newVarToInsert).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BrowserAutomationPackage.INSERT__VAR_TO_INSERT, null, msgs);
      msgs = basicSetVarToInsert(newVarToInsert, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.INSERT__VAR_TO_INSERT, newVarToInsert, newVarToInsert));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public VarReference getVarInserted()
  {
    return varInserted;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVarInserted(VarReference newVarInserted, NotificationChain msgs)
  {
    VarReference oldVarInserted = varInserted;
    varInserted = newVarInserted;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.INSERT__VAR_INSERTED, oldVarInserted, newVarInserted);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVarInserted(VarReference newVarInserted)
  {
    if (newVarInserted != varInserted)
    {
      NotificationChain msgs = null;
      if (varInserted != null)
        msgs = ((InternalEObject)varInserted).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - BrowserAutomationPackage.INSERT__VAR_INSERTED, null, msgs);
      if (newVarInserted != null)
        msgs = ((InternalEObject)newVarInserted).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - BrowserAutomationPackage.INSERT__VAR_INSERTED, null, msgs);
      msgs = basicSetVarInserted(newVarInserted, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, BrowserAutomationPackage.INSERT__VAR_INSERTED, newVarInserted, newVarInserted));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.INSERT__VAR_TO_INSERT:
        return basicSetVarToInsert(null, msgs);
      case BrowserAutomationPackage.INSERT__VAR_INSERTED:
        return basicSetVarInserted(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.INSERT__ATTR_VAL:
        return getAttrVal();
      case BrowserAutomationPackage.INSERT__VAR_TO_INSERT:
        return getVarToInsert();
      case BrowserAutomationPackage.INSERT__VAR_INSERTED:
        return getVarInserted();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.INSERT__ATTR_VAL:
        setAttrVal((String)newValue);
        return;
      case BrowserAutomationPackage.INSERT__VAR_TO_INSERT:
        setVarToInsert((VarReference)newValue);
        return;
      case BrowserAutomationPackage.INSERT__VAR_INSERTED:
        setVarInserted((VarReference)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.INSERT__ATTR_VAL:
        setAttrVal(ATTR_VAL_EDEFAULT);
        return;
      case BrowserAutomationPackage.INSERT__VAR_TO_INSERT:
        setVarToInsert((VarReference)null);
        return;
      case BrowserAutomationPackage.INSERT__VAR_INSERTED:
        setVarInserted((VarReference)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case BrowserAutomationPackage.INSERT__ATTR_VAL:
        return ATTR_VAL_EDEFAULT == null ? attrVal != null : !ATTR_VAL_EDEFAULT.equals(attrVal);
      case BrowserAutomationPackage.INSERT__VAR_TO_INSERT:
        return varToInsert != null;
      case BrowserAutomationPackage.INSERT__VAR_INSERTED:
        return varInserted != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (attrVal: ");
    result.append(attrVal);
    result.append(')');
    return result.toString();
  }

} //InsertImpl
